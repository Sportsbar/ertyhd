using EmployeePortal.API.Entities;

namespace EmployeePortal.API.Interfaces
{
    public interface IDapperService<TEntity> where TEntity : class
    {
        
            Task<Employee> GetByIdAsync(int id);
            Task<IEnumerable<Employee>> GetEmployees();
            Task<IEnumerable<Employee>> GetEmployeesByDepartment(string department);

            Task<IEnumerable<ccms_employee>> GetCCMSEmployees();

       

    }
}


























using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Threading.Tasks;
using Dapper;
using EmployeePortal.API.Entities;
using EmployeePortal.API.Interfaces;

namespace EmployeePortal.API.Services
{
    public class DapperService<TEntity> : IDapperService<TEntity> where TEntity : class
    {
        
            private readonly IDbConnection _db;

            public DapperService(IDbConnection db)
            {
                _db = db;
            }
            //Get employees by Id
            public async Task<Employee> GetByIdAsync(int id)
            {
                var query = $"SELECT * FROM Employees WHERE Id = @id";
                var parameters = new { id };
                return await _db.QueryFirstOrDefaultAsync<Employee>(query, parameters);
            }

            //Get entire employees Table
            public async Task<IEnumerable<Employee>> GetEmployees()
            {
                var query = "SELECT * FROM Employees";
                return await _db.QueryAsync<Employee>(query);
            }
            //Get employee list by branch
            public async Task<IEnumerable<Employee>> GetEmployeesByDepartment(string department)
            {
                var parameters = new { Department = department };
                var query = "EXEC GetEmployeesByDepartment @Department";

                return await _db.QueryAsync<Employee>(query, parameters);
            }

            public async Task<IEnumerable<ccms_employee>> GetCCMSEmployees()
            {
                var query = "EXEC Getccmsemployees";

                return await _db.QueryAsync<ccms_employee>(query);
            }


        



    }
}
